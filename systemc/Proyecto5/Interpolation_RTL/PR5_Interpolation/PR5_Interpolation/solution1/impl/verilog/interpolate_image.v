// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="interpolate_image,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.285400,HLS_SYN_LAT=2851841,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=14,HLS_SYN_FF=2035,HLS_SYN_LUT=3745,HLS_VERSION=2019_1}" *)

module interpolate_image (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_image_address0,
        input_image_ce0,
        input_image_q0,
        input_image_address1,
        input_image_ce1,
        input_image_q1,
        output_image_address0,
        output_image_ce0,
        output_image_we0,
        output_image_d0
);

parameter    ap_ST_fsm_state1 = 50'd1;
parameter    ap_ST_fsm_state2 = 50'd2;
parameter    ap_ST_fsm_state3 = 50'd4;
parameter    ap_ST_fsm_state4 = 50'd8;
parameter    ap_ST_fsm_state5 = 50'd16;
parameter    ap_ST_fsm_state6 = 50'd32;
parameter    ap_ST_fsm_state7 = 50'd64;
parameter    ap_ST_fsm_state8 = 50'd128;
parameter    ap_ST_fsm_state9 = 50'd256;
parameter    ap_ST_fsm_state10 = 50'd512;
parameter    ap_ST_fsm_state11 = 50'd1024;
parameter    ap_ST_fsm_state12 = 50'd2048;
parameter    ap_ST_fsm_state13 = 50'd4096;
parameter    ap_ST_fsm_state14 = 50'd8192;
parameter    ap_ST_fsm_state15 = 50'd16384;
parameter    ap_ST_fsm_state16 = 50'd32768;
parameter    ap_ST_fsm_state17 = 50'd65536;
parameter    ap_ST_fsm_state18 = 50'd131072;
parameter    ap_ST_fsm_state19 = 50'd262144;
parameter    ap_ST_fsm_state20 = 50'd524288;
parameter    ap_ST_fsm_state21 = 50'd1048576;
parameter    ap_ST_fsm_state22 = 50'd2097152;
parameter    ap_ST_fsm_state23 = 50'd4194304;
parameter    ap_ST_fsm_state24 = 50'd8388608;
parameter    ap_ST_fsm_state25 = 50'd16777216;
parameter    ap_ST_fsm_state26 = 50'd33554432;
parameter    ap_ST_fsm_state27 = 50'd67108864;
parameter    ap_ST_fsm_state28 = 50'd134217728;
parameter    ap_ST_fsm_state29 = 50'd268435456;
parameter    ap_ST_fsm_state30 = 50'd536870912;
parameter    ap_ST_fsm_state31 = 50'd1073741824;
parameter    ap_ST_fsm_state32 = 50'd2147483648;
parameter    ap_ST_fsm_state33 = 50'd4294967296;
parameter    ap_ST_fsm_state34 = 50'd8589934592;
parameter    ap_ST_fsm_state35 = 50'd17179869184;
parameter    ap_ST_fsm_state36 = 50'd34359738368;
parameter    ap_ST_fsm_state37 = 50'd68719476736;
parameter    ap_ST_fsm_state38 = 50'd137438953472;
parameter    ap_ST_fsm_state39 = 50'd274877906944;
parameter    ap_ST_fsm_state40 = 50'd549755813888;
parameter    ap_ST_fsm_state41 = 50'd1099511627776;
parameter    ap_ST_fsm_state42 = 50'd2199023255552;
parameter    ap_ST_fsm_state43 = 50'd4398046511104;
parameter    ap_ST_fsm_state44 = 50'd8796093022208;
parameter    ap_ST_fsm_state45 = 50'd17592186044416;
parameter    ap_ST_fsm_state46 = 50'd35184372088832;
parameter    ap_ST_fsm_state47 = 50'd70368744177664;
parameter    ap_ST_fsm_state48 = 50'd140737488355328;
parameter    ap_ST_fsm_state49 = 50'd281474976710656;
parameter    ap_ST_fsm_state50 = 50'd562949953421312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [18:0] input_image_address0;
output   input_image_ce0;
input  [7:0] input_image_q0;
output  [18:0] input_image_address1;
output   input_image_ce1;
input  [7:0] input_image_q1;
output  [16:0] output_image_address0;
output   output_image_ce0;
output   output_image_we0;
output  [7:0] output_image_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[18:0] input_image_address0;
reg input_image_ce0;
reg[18:0] input_image_address1;
reg input_image_ce1;
reg output_image_ce0;
reg output_image_we0;

(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_198_p1;
reg   [31:0] reg_204;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] reg_210;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_201_p1;
reg   [31:0] reg_215;
reg   [7:0] reg_221;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
reg   [7:0] reg_225;
reg   [31:0] reg_229;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state45;
wire   [31:0] zext_ln16_fu_235_p1;
wire    ap_CS_fsm_state2;
wire   [7:0] y_fu_246_p2;
reg   [7:0] y_reg_953;
reg   [31:0] x_assign_1_reg_958;
wire    ap_CS_fsm_state8;
wire   [16:0] zext_ln310_fu_260_p1;
reg   [16:0] zext_ln310_reg_963;
wire   [31:0] p_Val2_5_fu_264_p1;
reg   [31:0] p_Val2_5_reg_968;
reg   [0:0] p_Result_1_reg_974;
wire   [31:0] zext_ln17_fu_276_p1;
wire    ap_CS_fsm_state9;
wire   [8:0] x_fu_287_p2;
reg   [8:0] x_reg_987;
reg   [7:0] tmp_V_2_reg_992;
wire   [0:0] icmp_ln17_fu_281_p2;
wire   [22:0] tmp_V_3_fu_302_p1;
reg   [22:0] tmp_V_3_reg_998;
wire   [17:0] sub_ln31_fu_330_p2;
reg   [17:0] sub_ln31_reg_1003;
wire  signed [31:0] p_Val2_15_fu_472_p3;
reg  signed [31:0] p_Val2_15_reg_1008;
wire    ap_CS_fsm_state16;
wire  signed [31:0] p_Val2_17_fu_587_p3;
reg  signed [31:0] p_Val2_17_reg_1015;
wire   [31:0] grp_fu_178_p2;
reg   [31:0] dx_reg_1022;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_182_p2;
reg   [31:0] dy_reg_1028;
wire   [40:0] mul_ln26_fu_597_p2;
reg   [40:0] mul_ln26_reg_1034;
wire    ap_CS_fsm_state27;
wire   [40:0] mul_ln29_fu_612_p2;
reg   [40:0] mul_ln29_reg_1040;
wire   [19:0] sub_ln26_fu_642_p2;
reg   [19:0] sub_ln26_reg_1046;
wire    ap_CS_fsm_state28;
reg   [31:0] tmp_6_reg_1051;
wire   [19:0] sub_ln26_1_fu_678_p2;
reg   [19:0] sub_ln26_1_reg_1056;
wire   [19:0] sub_ln29_fu_705_p2;
reg   [19:0] sub_ln29_reg_1061;
wire   [19:0] sub_ln29_1_fu_732_p2;
reg   [19:0] sub_ln29_1_reg_1066;
reg   [31:0] tmp_7_reg_1071;
wire   [1:0] c_fu_744_p2;
reg   [1:0] c_reg_1079;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln21_fu_738_p2;
wire   [19:0] add_ln29_3_fu_778_p2;
reg   [19:0] add_ln29_3_reg_1094;
wire   [19:0] add_ln29_4_fu_783_p2;
reg   [19:0] add_ln29_4_reg_1099;
wire   [17:0] add_ln31_1_fu_788_p2;
reg   [17:0] add_ln31_1_reg_1104;
wire   [31:0] zext_ln26_fu_801_p1;
wire   [31:0] zext_ln26_1_fu_806_p1;
wire   [31:0] zext_ln29_fu_811_p1;
wire    ap_CS_fsm_state32;
wire   [31:0] zext_ln29_1_fu_816_p1;
reg   [31:0] tmp_3_reg_1139;
wire    ap_CS_fsm_state35;
reg   [31:0] tmp_11_reg_1144;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] tmp_1_reg_1149;
reg   [31:0] tmp_12_reg_1154;
reg   [31:0] top_reg_1159;
wire    ap_CS_fsm_state41;
reg   [31:0] bottom_reg_1164;
wire    ap_CS_fsm_state42;
reg   [7:0] tmp_V_4_reg_1169;
wire    ap_CS_fsm_state49;
wire   [22:0] tmp_V_5_fu_835_p1;
reg   [22:0] tmp_V_5_reg_1175;
reg   [7:0] y_0_reg_144;
reg   [8:0] x_0_reg_156;
reg   [1:0] c_0_reg_167;
wire    ap_CS_fsm_state50;
wire   [63:0] zext_ln26_4_fu_763_p1;
wire   [63:0] zext_ln26_5_fu_773_p1;
wire   [63:0] zext_ln29_2_fu_793_p1;
wire   [63:0] zext_ln29_3_fu_797_p1;
wire   [63:0] zext_ln31_2_fu_839_p1;
reg   [31:0] grp_fu_178_p0;
reg   [31:0] grp_fu_178_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state46;
reg   [31:0] grp_fu_182_p0;
reg   [31:0] grp_fu_182_p1;
reg   [31:0] grp_fu_188_p0;
reg   [31:0] grp_fu_188_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state43;
reg   [31:0] grp_fu_194_p0;
reg   [31:0] grp_fu_198_p0;
wire    ap_CS_fsm_state17;
reg  signed [31:0] grp_fu_201_p0;
wire   [15:0] tmp_15_fu_252_p3;
wire   [16:0] zext_ln31_fu_305_p1;
wire   [16:0] add_ln31_fu_309_p2;
wire   [15:0] trunc_ln31_fu_318_p1;
wire   [17:0] p_shl_cast_fu_322_p3;
wire   [17:0] zext_ln31_1_fu_314_p1;
wire   [31:0] p_Val2_s_fu_336_p1;
wire   [22:0] tmp_V_1_fu_358_p1;
wire   [24:0] mantissa_V_fu_362_p4;
wire   [7:0] tmp_V_fu_348_p4;
wire   [8:0] zext_ln339_fu_376_p1;
wire   [8:0] add_ln339_fu_380_p2;
wire   [7:0] sub_ln1311_fu_394_p2;
wire   [0:0] isNeg_fu_386_p3;
wire  signed [8:0] sext_ln1311_fu_400_p1;
wire  signed [8:0] ush_fu_404_p3;
wire  signed [31:0] sext_ln1311_1_fu_412_p1;
wire  signed [24:0] sext_ln1311_6_fu_416_p1;
wire   [78:0] zext_ln682_fu_372_p1;
wire   [78:0] zext_ln1287_fu_420_p1;
wire   [24:0] r_V_fu_424_p2;
wire   [0:0] tmp_21_fu_436_p3;
wire   [78:0] r_V_1_fu_430_p2;
wire   [31:0] zext_ln662_fu_444_p1;
wire   [31:0] tmp_17_fu_448_p4;
wire   [31:0] p_Val2_14_fu_458_p3;
wire   [0:0] p_Result_s_fu_340_p3;
wire   [31:0] result_V_1_fu_466_p2;
wire   [24:0] mantissa_V_1_fu_480_p4;
wire   [8:0] zext_ln339_1_fu_493_p1;
wire   [8:0] add_ln339_1_fu_496_p2;
wire   [7:0] sub_ln1311_1_fu_510_p2;
wire   [0:0] isNeg_1_fu_502_p3;
wire  signed [8:0] sext_ln1311_2_fu_515_p1;
wire  signed [8:0] ush_1_fu_519_p3;
wire  signed [31:0] sext_ln1311_3_fu_527_p1;
wire  signed [24:0] sext_ln1311_7_fu_531_p1;
wire   [78:0] zext_ln682_1_fu_489_p1;
wire   [78:0] zext_ln1287_1_fu_535_p1;
wire   [24:0] r_V_2_fu_539_p2;
wire   [0:0] tmp_23_fu_551_p3;
wire   [78:0] r_V_3_fu_545_p2;
wire   [31:0] zext_ln662_1_fu_559_p1;
wire   [31:0] tmp_18_fu_563_p4;
wire   [31:0] p_Val2_16_fu_573_p3;
wire   [31:0] result_V_3_fu_581_p2;
wire  signed [31:0] mul_ln26_fu_597_p1;
wire   [31:0] add_ln29_fu_603_p2;
wire  signed [31:0] mul_ln29_fu_612_p1;
wire  signed [40:0] sext_ln26_fu_618_p1;
wire   [40:0] add_ln26_1_fu_621_p2;
wire   [17:0] trunc_ln26_1_fu_630_p1;
wire   [19:0] p_shl4_cast_fu_634_p3;
wire   [19:0] trunc_ln26_fu_626_p1;
wire   [31:0] add_ln26_fu_648_p2;
wire  signed [40:0] sext_ln26_2_fu_653_p1;
wire   [40:0] add_ln26_2_fu_657_p2;
wire   [17:0] trunc_ln26_3_fu_666_p1;
wire   [19:0] p_shl3_cast_fu_670_p3;
wire   [19:0] trunc_ln26_2_fu_662_p1;
wire   [40:0] add_ln29_1_fu_684_p2;
wire   [17:0] trunc_ln29_1_fu_693_p1;
wire   [19:0] p_shl2_cast_fu_697_p3;
wire   [19:0] trunc_ln29_fu_689_p1;
wire   [40:0] add_ln29_2_fu_711_p2;
wire   [17:0] trunc_ln29_3_fu_720_p1;
wire   [19:0] p_shl1_cast_fu_724_p3;
wire   [19:0] trunc_ln29_2_fu_716_p1;
wire   [19:0] zext_ln26_3_fu_754_p1;
wire   [19:0] add_ln26_3_fu_758_p2;
wire   [19:0] add_ln26_4_fu_768_p2;
wire   [17:0] zext_ln26_2_fu_750_p1;
wire   [31:0] p_Val2_10_fu_821_p1;
wire   [24:0] mantissa_V_2_fu_843_p4;
wire   [8:0] zext_ln339_2_fu_856_p1;
wire   [8:0] add_ln339_2_fu_859_p2;
wire   [7:0] sub_ln1311_2_fu_873_p2;
wire   [0:0] isNeg_2_fu_865_p3;
wire  signed [8:0] sext_ln1311_4_fu_878_p1;
wire  signed [8:0] ush_2_fu_882_p3;
wire  signed [31:0] sext_ln1311_5_fu_890_p1;
wire  signed [24:0] sext_ln1311_8_fu_894_p1;
wire   [54:0] zext_ln682_2_fu_852_p1;
wire   [54:0] zext_ln1287_2_fu_898_p1;
wire   [24:0] r_V_4_fu_902_p2;
wire   [0:0] tmp_27_fu_914_p3;
wire   [54:0] r_V_5_fu_908_p2;
wire   [7:0] zext_ln662_2_fu_922_p1;
wire   [7:0] tmp_19_fu_926_p4;
reg   [1:0] grp_fu_178_opcode;
wire   [0:0] icmp_ln16_fu_240_p2;
reg   [49:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'd1;
end

interpolate_image_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_faddfsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(grp_fu_178_p1),
    .opcode(grp_fu_178_opcode),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

interpolate_image_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_fsub_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .din1(grp_fu_182_p1),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

interpolate_image_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_fmul_32ns_32ns_32_3_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(grp_fu_188_p1),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

interpolate_image_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_fmul_32ns_32ns_32_3_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .din1(dx_reg_1022),
    .ce(1'b1),
    .dout(grp_fu_194_p2)
);

interpolate_image_sitofp_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_sitofp_32ns_32_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .ce(1'b1),
    .dout(grp_fu_198_p1)
);

interpolate_image_sitofp_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
interpolate_image_sitofp_32s_32_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_201_p0),
    .ce(1'b1),
    .dout(grp_fu_201_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        c_0_reg_167 <= c_reg_1079;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_0_reg_167 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        x_0_reg_156 <= x_reg_987;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_0_reg_156 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln17_fu_281_p2 == 1'd1))) begin
        y_0_reg_144 <= y_reg_953;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        y_0_reg_144 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln21_fu_738_p2 == 1'd0))) begin
        add_ln29_3_reg_1094 <= add_ln29_3_fu_778_p2;
        add_ln29_4_reg_1099 <= add_ln29_4_fu_783_p2;
        add_ln31_1_reg_1104 <= add_ln31_1_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        bottom_reg_1164 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        c_reg_1079 <= c_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        dx_reg_1022 <= grp_fu_178_p2;
        dy_reg_1028 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mul_ln26_reg_1034 <= mul_ln26_fu_597_p2;
        mul_ln29_reg_1040 <= mul_ln29_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Result_1_reg_974 <= p_Val2_5_fu_264_p1[32'd31];
        p_Val2_5_reg_968 <= p_Val2_5_fu_264_p1;
        x_assign_1_reg_958 <= grp_fu_188_p2;
        zext_ln310_reg_963[15 : 8] <= zext_ln310_fu_260_p1[15 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_15_reg_1008 <= p_Val2_15_fu_472_p3;
        p_Val2_17_reg_1015 <= p_Val2_17_fu_587_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_204 <= grp_fu_198_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_210 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_215 <= grp_fu_201_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_221 <= input_image_q0;
        reg_225 <= input_image_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_229 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        sub_ln26_1_reg_1056 <= sub_ln26_1_fu_678_p2;
        sub_ln26_reg_1046 <= sub_ln26_fu_642_p2;
        sub_ln29_1_reg_1066 <= sub_ln29_1_fu_732_p2;
        sub_ln29_reg_1061 <= sub_ln29_fu_705_p2;
        tmp_6_reg_1051 <= grp_fu_178_p2;
        tmp_7_reg_1071 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln17_fu_281_p2 == 1'd0))) begin
        sub_ln31_reg_1003 <= sub_ln31_fu_330_p2;
        tmp_V_2_reg_992 <= {{p_Val2_5_reg_968[30:23]}};
        tmp_V_3_reg_998 <= tmp_V_3_fu_302_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_11_reg_1144 <= grp_fu_201_p1;
        tmp_3_reg_1139 <= grp_fu_198_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_12_reg_1154 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_1_reg_1149 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_V_4_reg_1169 <= {{p_Val2_10_fu_821_p1[30:23]}};
        tmp_V_5_reg_1175 <= tmp_V_5_fu_835_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        top_reg_1159 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x_reg_987 <= x_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_953 <= y_fu_246_p2;
    end
end

always @ (*) begin
    if (((icmp_ln16_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_178_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_178_opcode = 2'd0;
    end else begin
        grp_fu_178_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_178_p0 = reg_229;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_178_p0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_178_p0 = reg_210;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_178_p1 = reg_229;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_178_p1 = tmp_12_reg_1154;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_178_p1 = tmp_1_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_178_p1 = dx_reg_1022;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_178_p1 = reg_204;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_182_p0 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_182_p0 = x_assign_1_reg_958;
    end else begin
        grp_fu_182_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_182_p1 = dy_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_182_p1 = reg_215;
    end else begin
        grp_fu_182_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_188_p0 = bottom_reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_188_p0 = top_reg_1159;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_188_p0 = tmp_3_reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_188_p0 = reg_204;
    end else begin
        grp_fu_188_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_188_p1 = dy_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_188_p1 = tmp_7_reg_1071;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_188_p1 = tmp_6_reg_1051;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_188_p1 = 32'd1071153152;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_188_p1 = 32'd1075904512;
    end else begin
        grp_fu_188_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_194_p0 = tmp_11_reg_1144;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_194_p0 = reg_215;
    end else begin
        grp_fu_194_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_198_p0 = zext_ln29_fu_811_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_198_p0 = zext_ln26_fu_801_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_198_p0 = p_Val2_15_reg_1008;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_198_p0 = zext_ln17_fu_276_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_198_p0 = zext_ln16_fu_235_p1;
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_201_p0 = zext_ln29_1_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_201_p0 = zext_ln26_1_fu_806_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_201_p0 = p_Val2_17_reg_1015;
    end else begin
        grp_fu_201_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        input_image_address0 = zext_ln29_2_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        input_image_address0 = zext_ln26_4_fu_763_p1;
    end else begin
        input_image_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        input_image_address1 = zext_ln29_3_fu_797_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        input_image_address1 = zext_ln26_5_fu_773_p1;
    end else begin
        input_image_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30))) begin
        input_image_ce0 = 1'b1;
    end else begin
        input_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30))) begin
        input_image_ce1 = 1'b1;
    end else begin
        input_image_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        output_image_ce0 = 1'b1;
    end else begin
        output_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        output_image_we0 = 1'b1;
    end else begin
        output_image_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln16_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln17_fu_281_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln21_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_1_fu_621_p2 = ($signed(sext_ln26_fu_618_p1) + $signed(mul_ln26_reg_1034));

assign add_ln26_2_fu_657_p2 = ($signed(sext_ln26_2_fu_653_p1) + $signed(mul_ln26_reg_1034));

assign add_ln26_3_fu_758_p2 = (zext_ln26_3_fu_754_p1 + sub_ln26_reg_1046);

assign add_ln26_4_fu_768_p2 = (zext_ln26_3_fu_754_p1 + sub_ln26_1_reg_1056);

assign add_ln26_fu_648_p2 = ($signed(32'd1) + $signed(p_Val2_15_reg_1008));

assign add_ln29_1_fu_684_p2 = ($signed(sext_ln26_fu_618_p1) + $signed(mul_ln29_reg_1040));

assign add_ln29_2_fu_711_p2 = ($signed(sext_ln26_2_fu_653_p1) + $signed(mul_ln29_reg_1040));

assign add_ln29_3_fu_778_p2 = (zext_ln26_3_fu_754_p1 + sub_ln29_reg_1061);

assign add_ln29_4_fu_783_p2 = (zext_ln26_3_fu_754_p1 + sub_ln29_1_reg_1066);

assign add_ln29_fu_603_p2 = ($signed(32'd1) + $signed(p_Val2_17_reg_1015));

assign add_ln31_1_fu_788_p2 = (zext_ln26_2_fu_750_p1 + sub_ln31_reg_1003);

assign add_ln31_fu_309_p2 = (zext_ln31_fu_305_p1 + zext_ln310_reg_963);

assign add_ln339_1_fu_496_p2 = ($signed(9'd385) + $signed(zext_ln339_1_fu_493_p1));

assign add_ln339_2_fu_859_p2 = ($signed(9'd385) + $signed(zext_ln339_2_fu_856_p1));

assign add_ln339_fu_380_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_376_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign c_fu_744_p2 = (c_0_reg_167 + 2'd1);

assign icmp_ln16_fu_240_p2 = ((y_0_reg_144 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_281_p2 = ((x_0_reg_156 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_738_p2 = ((c_0_reg_167 == 2'd3) ? 1'b1 : 1'b0);

assign isNeg_1_fu_502_p3 = add_ln339_1_fu_496_p2[32'd8];

assign isNeg_2_fu_865_p3 = add_ln339_2_fu_859_p2[32'd8];

assign isNeg_fu_386_p3 = add_ln339_fu_380_p2[32'd8];

assign mantissa_V_1_fu_480_p4 = {{{{1'd1}, {tmp_V_3_reg_998}}}, {1'd0}};

assign mantissa_V_2_fu_843_p4 = {{{{1'd1}, {tmp_V_5_reg_1175}}}, {1'd0}};

assign mantissa_V_fu_362_p4 = {{{{1'd1}, {tmp_V_1_fu_358_p1}}}, {1'd0}};

assign mul_ln26_fu_597_p1 = p_Val2_17_reg_1015;

assign mul_ln26_fu_597_p2 = ($signed({{1'b0}, {41'd434}}) * $signed(mul_ln26_fu_597_p1));

assign mul_ln29_fu_612_p1 = add_ln29_fu_603_p2;

assign mul_ln29_fu_612_p2 = ($signed({{1'b0}, {41'd434}}) * $signed(mul_ln29_fu_612_p1));

assign output_image_address0 = zext_ln31_2_fu_839_p1;

assign output_image_d0 = ((isNeg_2_fu_865_p3[0:0] === 1'b1) ? zext_ln662_2_fu_922_p1 : tmp_19_fu_926_p4);

assign p_Result_s_fu_340_p3 = p_Val2_s_fu_336_p1[32'd31];

assign p_Val2_10_fu_821_p1 = grp_fu_178_p2;

assign p_Val2_14_fu_458_p3 = ((isNeg_fu_386_p3[0:0] === 1'b1) ? zext_ln662_fu_444_p1 : tmp_17_fu_448_p4);

assign p_Val2_15_fu_472_p3 = ((p_Result_s_fu_340_p3[0:0] === 1'b1) ? result_V_1_fu_466_p2 : p_Val2_14_fu_458_p3);

assign p_Val2_16_fu_573_p3 = ((isNeg_1_fu_502_p3[0:0] === 1'b1) ? zext_ln662_1_fu_559_p1 : tmp_18_fu_563_p4);

assign p_Val2_17_fu_587_p3 = ((p_Result_1_reg_974[0:0] === 1'b1) ? result_V_3_fu_581_p2 : p_Val2_16_fu_573_p3);

assign p_Val2_5_fu_264_p1 = grp_fu_188_p2;

assign p_Val2_s_fu_336_p1 = reg_210;

assign p_shl1_cast_fu_724_p3 = {{trunc_ln29_3_fu_720_p1}, {2'd0}};

assign p_shl2_cast_fu_697_p3 = {{trunc_ln29_1_fu_693_p1}, {2'd0}};

assign p_shl3_cast_fu_670_p3 = {{trunc_ln26_3_fu_666_p1}, {2'd0}};

assign p_shl4_cast_fu_634_p3 = {{trunc_ln26_1_fu_630_p1}, {2'd0}};

assign p_shl_cast_fu_322_p3 = {{trunc_ln31_fu_318_p1}, {2'd0}};

assign r_V_1_fu_430_p2 = zext_ln682_fu_372_p1 << zext_ln1287_fu_420_p1;

assign r_V_2_fu_539_p2 = mantissa_V_1_fu_480_p4 >> sext_ln1311_7_fu_531_p1;

assign r_V_3_fu_545_p2 = zext_ln682_1_fu_489_p1 << zext_ln1287_1_fu_535_p1;

assign r_V_4_fu_902_p2 = mantissa_V_2_fu_843_p4 >> sext_ln1311_8_fu_894_p1;

assign r_V_5_fu_908_p2 = zext_ln682_2_fu_852_p1 << zext_ln1287_2_fu_898_p1;

assign r_V_fu_424_p2 = mantissa_V_fu_362_p4 >> sext_ln1311_6_fu_416_p1;

assign result_V_1_fu_466_p2 = (32'd0 - p_Val2_14_fu_458_p3);

assign result_V_3_fu_581_p2 = (32'd0 - p_Val2_16_fu_573_p3);

assign sext_ln1311_1_fu_412_p1 = ush_fu_404_p3;

assign sext_ln1311_2_fu_515_p1 = $signed(sub_ln1311_1_fu_510_p2);

assign sext_ln1311_3_fu_527_p1 = ush_1_fu_519_p3;

assign sext_ln1311_4_fu_878_p1 = $signed(sub_ln1311_2_fu_873_p2);

assign sext_ln1311_5_fu_890_p1 = ush_2_fu_882_p3;

assign sext_ln1311_6_fu_416_p1 = ush_fu_404_p3;

assign sext_ln1311_7_fu_531_p1 = ush_1_fu_519_p3;

assign sext_ln1311_8_fu_894_p1 = ush_2_fu_882_p3;

assign sext_ln1311_fu_400_p1 = $signed(sub_ln1311_fu_394_p2);

assign sext_ln26_2_fu_653_p1 = $signed(add_ln26_fu_648_p2);

assign sext_ln26_fu_618_p1 = p_Val2_15_reg_1008;

assign sub_ln1311_1_fu_510_p2 = (8'd127 - tmp_V_2_reg_992);

assign sub_ln1311_2_fu_873_p2 = (8'd127 - tmp_V_4_reg_1169);

assign sub_ln1311_fu_394_p2 = (8'd127 - tmp_V_fu_348_p4);

assign sub_ln26_1_fu_678_p2 = (p_shl3_cast_fu_670_p3 - trunc_ln26_2_fu_662_p1);

assign sub_ln26_fu_642_p2 = (p_shl4_cast_fu_634_p3 - trunc_ln26_fu_626_p1);

assign sub_ln29_1_fu_732_p2 = (p_shl1_cast_fu_724_p3 - trunc_ln29_2_fu_716_p1);

assign sub_ln29_fu_705_p2 = (p_shl2_cast_fu_697_p3 - trunc_ln29_fu_689_p1);

assign sub_ln31_fu_330_p2 = (p_shl_cast_fu_322_p3 - zext_ln31_1_fu_314_p1);

assign tmp_15_fu_252_p3 = {{y_0_reg_144}, {8'd0}};

assign tmp_17_fu_448_p4 = {{r_V_1_fu_430_p2[55:24]}};

assign tmp_18_fu_563_p4 = {{r_V_3_fu_545_p2[55:24]}};

assign tmp_19_fu_926_p4 = {{r_V_5_fu_908_p2[31:24]}};

assign tmp_21_fu_436_p3 = r_V_fu_424_p2[32'd24];

assign tmp_23_fu_551_p3 = r_V_2_fu_539_p2[32'd24];

assign tmp_27_fu_914_p3 = r_V_4_fu_902_p2[32'd24];

assign tmp_V_1_fu_358_p1 = p_Val2_s_fu_336_p1[22:0];

assign tmp_V_3_fu_302_p1 = p_Val2_5_reg_968[22:0];

assign tmp_V_5_fu_835_p1 = p_Val2_10_fu_821_p1[22:0];

assign tmp_V_fu_348_p4 = {{p_Val2_s_fu_336_p1[30:23]}};

assign trunc_ln26_1_fu_630_p1 = add_ln26_1_fu_621_p2[17:0];

assign trunc_ln26_2_fu_662_p1 = add_ln26_2_fu_657_p2[19:0];

assign trunc_ln26_3_fu_666_p1 = add_ln26_2_fu_657_p2[17:0];

assign trunc_ln26_fu_626_p1 = add_ln26_1_fu_621_p2[19:0];

assign trunc_ln29_1_fu_693_p1 = add_ln29_1_fu_684_p2[17:0];

assign trunc_ln29_2_fu_716_p1 = add_ln29_2_fu_711_p2[19:0];

assign trunc_ln29_3_fu_720_p1 = add_ln29_2_fu_711_p2[17:0];

assign trunc_ln29_fu_689_p1 = add_ln29_1_fu_684_p2[19:0];

assign trunc_ln31_fu_318_p1 = add_ln31_fu_309_p2[15:0];

assign ush_1_fu_519_p3 = ((isNeg_1_fu_502_p3[0:0] === 1'b1) ? sext_ln1311_2_fu_515_p1 : add_ln339_1_fu_496_p2);

assign ush_2_fu_882_p3 = ((isNeg_2_fu_865_p3[0:0] === 1'b1) ? sext_ln1311_4_fu_878_p1 : add_ln339_2_fu_859_p2);

assign ush_fu_404_p3 = ((isNeg_fu_386_p3[0:0] === 1'b1) ? sext_ln1311_fu_400_p1 : add_ln339_fu_380_p2);

assign x_fu_287_p2 = (x_0_reg_156 + 9'd1);

assign y_fu_246_p2 = (y_0_reg_144 + 8'd1);

assign zext_ln1287_1_fu_535_p1 = $unsigned(sext_ln1311_3_fu_527_p1);

assign zext_ln1287_2_fu_898_p1 = $unsigned(sext_ln1311_5_fu_890_p1);

assign zext_ln1287_fu_420_p1 = $unsigned(sext_ln1311_1_fu_412_p1);

assign zext_ln16_fu_235_p1 = y_0_reg_144;

assign zext_ln17_fu_276_p1 = x_0_reg_156;

assign zext_ln26_1_fu_806_p1 = reg_225;

assign zext_ln26_2_fu_750_p1 = c_0_reg_167;

assign zext_ln26_3_fu_754_p1 = c_0_reg_167;

assign zext_ln26_4_fu_763_p1 = add_ln26_3_fu_758_p2;

assign zext_ln26_5_fu_773_p1 = add_ln26_4_fu_768_p2;

assign zext_ln26_fu_801_p1 = reg_221;

assign zext_ln29_1_fu_816_p1 = reg_225;

assign zext_ln29_2_fu_793_p1 = add_ln29_3_reg_1094;

assign zext_ln29_3_fu_797_p1 = add_ln29_4_reg_1099;

assign zext_ln29_fu_811_p1 = reg_221;

assign zext_ln310_fu_260_p1 = tmp_15_fu_252_p3;

assign zext_ln31_1_fu_314_p1 = add_ln31_fu_309_p2;

assign zext_ln31_2_fu_839_p1 = add_ln31_1_reg_1104;

assign zext_ln31_fu_305_p1 = x_0_reg_156;

assign zext_ln339_1_fu_493_p1 = tmp_V_2_reg_992;

assign zext_ln339_2_fu_856_p1 = tmp_V_4_reg_1169;

assign zext_ln339_fu_376_p1 = tmp_V_fu_348_p4;

assign zext_ln662_1_fu_559_p1 = tmp_23_fu_551_p3;

assign zext_ln662_2_fu_922_p1 = tmp_27_fu_914_p3;

assign zext_ln662_fu_444_p1 = tmp_21_fu_436_p3;

assign zext_ln682_1_fu_489_p1 = mantissa_V_1_fu_480_p4;

assign zext_ln682_2_fu_852_p1 = mantissa_V_2_fu_843_p4;

assign zext_ln682_fu_372_p1 = mantissa_V_fu_362_p4;

always @ (posedge ap_clk) begin
    zext_ln310_reg_963[7:0] <= 8'b00000000;
    zext_ln310_reg_963[16] <= 1'b0;
end

endmodule //interpolate_image
