// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_HH_
#define _top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_dmul_64ns_64ns_64_5_max_dsp_1.h"
#include "top_sitodp_32ns_64_4_1.h"

namespace ap_rtl {

struct top : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > trigger;
    sc_in< sc_lv<64> > simulated_time;
    sc_out< sc_lv<32> > dist_cm;
    sc_out< sc_logic > dist_cm_ap_vld;
    sc_out< sc_lv<64> > calc_voltage;
    sc_out< sc_logic > calc_voltage_ap_vld;
    sc_out< sc_lv<32> > sens_range;
    sc_out< sc_logic > sens_range_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    top(sc_module_name name);
    SC_HAS_PROCESS(top);

    ~top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    top_dmul_64ns_64ns_64_5_max_dsp_1<1,5,64,64,64>* top_dmul_64ns_64ns_64_5_max_dsp_1_U1;
    top_sitodp_32ns_64_4_1<1,4,32,64>* top_sitodp_32ns_64_4_1_U2;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_125_p2;
    sc_signal< sc_lv<64> > reg_135;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > p_Val2_6_fu_275_p3;
    sc_signal< sc_lv<32> > p_Val2_6_reg_467;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<30> > tmp_4_reg_480;
    sc_signal< sc_lv<1> > icmp_ln8_fu_293_p2;
    sc_signal< sc_lv<1> > icmp_ln8_reg_485;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > and_ln14_2_fu_366_p2;
    sc_signal< sc_lv<1> > and_ln14_2_reg_490;
    sc_signal< sc_lv<1> > and_ln12_2_fu_385_p2;
    sc_signal< sc_lv<1> > and_ln12_2_reg_495;
    sc_signal< sc_lv<64> > grp_fu_132_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > grp_fu_125_p0;
    sc_signal< sc_lv<64> > grp_fu_125_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > p_Val2_s_fu_139_p1;
    sc_signal< sc_lv<52> > tmp_V_1_fu_161_p1;
    sc_signal< sc_lv<54> > mantissa_V_fu_165_p4;
    sc_signal< sc_lv<11> > tmp_V_fu_151_p4;
    sc_signal< sc_lv<12> > zext_ln502_fu_179_p1;
    sc_signal< sc_lv<12> > add_ln502_fu_183_p2;
    sc_signal< sc_lv<11> > sub_ln1311_fu_197_p2;
    sc_signal< sc_lv<1> > isNeg_fu_189_p3;
    sc_signal< sc_lv<12> > sext_ln1311_fu_203_p1;
    sc_signal< sc_lv<12> > ush_fu_207_p3;
    sc_signal< sc_lv<32> > sext_ln1311_1_fu_215_p1;
    sc_signal< sc_lv<54> > zext_ln1285_fu_223_p1;
    sc_signal< sc_lv<137> > zext_ln682_fu_175_p1;
    sc_signal< sc_lv<137> > zext_ln1287_fu_219_p1;
    sc_signal< sc_lv<54> > r_V_fu_227_p2;
    sc_signal< sc_lv<1> > tmp_fu_239_p3;
    sc_signal< sc_lv<137> > r_V_1_fu_233_p2;
    sc_signal< sc_lv<32> > zext_ln662_fu_247_p1;
    sc_signal< sc_lv<32> > tmp_1_fu_251_p4;
    sc_signal< sc_lv<32> > p_Val2_5_fu_261_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_143_p3;
    sc_signal< sc_lv<32> > result_V_1_fu_269_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_319_p2;
    sc_signal< sc_lv<1> > icmp_ln16_1_fu_324_p2;
    sc_signal< sc_lv<1> > icmp_ln12_fu_299_p2;
    sc_signal< sc_lv<1> > icmp_ln12_1_fu_304_p2;
    sc_signal< sc_lv<1> > and_ln12_fu_342_p2;
    sc_signal< sc_lv<1> > xor_ln12_fu_348_p2;
    sc_signal< sc_lv<1> > icmp_ln14_1_fu_314_p2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_309_p2;
    sc_signal< sc_lv<1> > and_ln14_1_fu_360_p2;
    sc_signal< sc_lv<1> > and_ln14_fu_354_p2;
    sc_signal< sc_lv<32> > select_ln8_fu_335_p3;
    sc_signal< sc_lv<1> > and_ln12_1_fu_379_p2;
    sc_signal< sc_lv<32> > select_ln14_fu_372_p3;
    sc_signal< sc_lv<1> > and_ln16_fu_329_p2;
    sc_signal< sc_lv<1> > and_ln8_fu_399_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_421_p2;
    sc_signal< sc_lv<2> > select_ln12_2_fu_413_p3;
    sc_signal< sc_lv<2> > select_ln8_2_fu_405_p3;
    sc_signal< sc_lv<2> > select_ln12_3_fu_427_p3;
    sc_signal< sc_lv<64> > select_ln8_1_fu_440_p3;
    sc_signal< sc_lv<64> > select_ln14_1_fu_447_p3;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<64> ap_const_lv64_3FA16872B020C49C;
    static const sc_lv<64> ap_const_lv64_3F5A36E2EB1C432D;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<32> ap_const_lv32_65;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<32> ap_const_lv32_C9;
    static const sc_lv<32> ap_const_lv32_C8;
    static const sc_lv<32> ap_const_lv32_12D;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln502_fu_183_p2();
    void thread_and_ln12_1_fu_379_p2();
    void thread_and_ln12_2_fu_385_p2();
    void thread_and_ln12_fu_342_p2();
    void thread_and_ln14_1_fu_360_p2();
    void thread_and_ln14_2_fu_366_p2();
    void thread_and_ln14_fu_354_p2();
    void thread_and_ln16_fu_329_p2();
    void thread_and_ln8_fu_399_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_calc_voltage();
    void thread_calc_voltage_ap_vld();
    void thread_dist_cm();
    void thread_dist_cm_ap_vld();
    void thread_grp_fu_125_p0();
    void thread_grp_fu_125_p1();
    void thread_icmp_ln12_1_fu_304_p2();
    void thread_icmp_ln12_fu_299_p2();
    void thread_icmp_ln14_1_fu_314_p2();
    void thread_icmp_ln14_fu_309_p2();
    void thread_icmp_ln16_1_fu_324_p2();
    void thread_icmp_ln16_fu_319_p2();
    void thread_icmp_ln8_fu_293_p2();
    void thread_isNeg_fu_189_p3();
    void thread_mantissa_V_fu_165_p4();
    void thread_or_ln12_fu_421_p2();
    void thread_p_Result_s_fu_143_p3();
    void thread_p_Val2_5_fu_261_p3();
    void thread_p_Val2_6_fu_275_p3();
    void thread_p_Val2_s_fu_139_p1();
    void thread_r_V_1_fu_233_p2();
    void thread_r_V_fu_227_p2();
    void thread_result_V_1_fu_269_p2();
    void thread_select_ln12_2_fu_413_p3();
    void thread_select_ln12_3_fu_427_p3();
    void thread_select_ln14_1_fu_447_p3();
    void thread_select_ln14_fu_372_p3();
    void thread_select_ln8_1_fu_440_p3();
    void thread_select_ln8_2_fu_405_p3();
    void thread_select_ln8_fu_335_p3();
    void thread_sens_range();
    void thread_sens_range_ap_vld();
    void thread_sext_ln1311_1_fu_215_p1();
    void thread_sext_ln1311_fu_203_p1();
    void thread_sub_ln1311_fu_197_p2();
    void thread_tmp_1_fu_251_p4();
    void thread_tmp_V_1_fu_161_p1();
    void thread_tmp_V_fu_151_p4();
    void thread_tmp_fu_239_p3();
    void thread_ush_fu_207_p3();
    void thread_xor_ln12_fu_348_p2();
    void thread_zext_ln1285_fu_223_p1();
    void thread_zext_ln1287_fu_219_p1();
    void thread_zext_ln502_fu_179_p1();
    void thread_zext_ln662_fu_247_p1();
    void thread_zext_ln682_fu_175_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
